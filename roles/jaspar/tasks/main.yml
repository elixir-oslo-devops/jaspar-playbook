---
# tasks file for jaspar
- name: Install EPEL repo
  tags:
    - jaspar
  become: true
  ansible.builtin.dnf:
    name: epel-release
    state: latest
  when: ansible_user == 'rocky'


- name: Install prerequisite
  tags:
    - jaspar
  become: true
  ansible.builtin.package:
    name: '{{ item }}'
    state: present
    update_cache: true
  loop:
    - mod_ssl
    - git
  when: ansible_user == 'rocky'

- name: Make base directory
  tags:
    - jaspar
    - initialization
  become: true
  ansible.builtin.file:
    state: directory
    path: '{{ jaspar_app_dir }}'
    owner: '{{ ansible_user }}'
    mode: '0755'
    recurse: false

- name: Clone main repo
  tags:
    - jaspar
    - initialization
  become: false
  ansible.builtin.git:
    repo: '{{ jaspar_app_git_repo }}'
    dest: '{{ jaspar2020_dir }}'
    version: '{{ jaspar_app_git_version }}'
    update: false
    force: false

- name: Clone branding repo
  tags:
    - jaspar
    - initialization
  become: false
  ansible.builtin.git:
    repo: '{{ jaspar_branding_git_repo }}'
    dest: '{{ jaspar_app_dir }}/jaspar-branding'
    version: master

- name: Make data directory
  tags:
    - jaspar
    - initialization
  become: true
  ansible.builtin.file:
    state: directory
    path: '{{ jaspar_data_dir }}'
    owner: '{{ ansible_user }}'
    mode: '0755'
    recurse: false

- name: Fetch JASPAR data
  tags:
    - jaspar
    - initialization
#  become: true
  ansible.builtin.command:
    cmd: 'wget -r -nv -nc -nd -np -l 1 --no-check-certificate -e robots=off -P {{ jaspar_data_dir }} {{ jaspar_data_url }} '
  register: wget_result
  changed_when: '"Downloaded:" in wget_result.stderr'


#==============================================
# 00-root-packages.sh
#==============================================

- name: Install prerequisite
  tags:
    - jaspar
    - 00-root-packages
  become: true
  ansible.builtin.package:
    name: '{{ item }}'
    state: present
    update_cache: true
  loop:
    - acl
    - certbot
    - cpio
    - gcc
    - gcc-c++
    - gzip
    - libcurl-devel
    - libxml2-devel
    - make
    - openssl-devel
    - patch
    - perl-interpreter
    - python3
    - python3-certbot-apache
    - python3-devel
    - python3-pip
    - python3-mod_wsgi
    - sqlite
    - wget
    - which
  when: ansible_user == 'rocky'

#==============================================
# 00-user-deploy-tools.sh
#==============================================

- name: Clone tools repo
  tags:
    - jaspar
    - 00-user-deploy-tools
  become: false
  ansible.builtin.git:
    repo: '{{ jaspar_tools_git_repo }}'
    dest: '{{ jaspar_tool_dir }}'
    version: '{{ jaspar_app_git_version }}'


- name: Install packages for tools
  tags:
    - jaspar
    - 00-user-deploy-tools
  become: true
  ansible.builtin.dnf:
    state: present
    name:
      - gcc-c++
      - git
      - gsl-devel
  enablerepo: devel
  when: ansible_user == 'rocky'


