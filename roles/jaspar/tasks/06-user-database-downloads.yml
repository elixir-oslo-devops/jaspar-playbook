---
# tasks file for 06-user-database-downloads

##TODO: Ansiblelized script ?
#- name: Generate database archives.
#  become: false
#  ansible.builtin.command:
#    cmd: '{{ jaspar_app_dir }}/deploy/06-user-database-downloads.sh'
#    chdir: '{{ jaspar_app_dir }}'



#- name: Create database download directory
#  ansible.builtin.file:
#    path: '{{ jaspar_app_dir }}/download/database'
#    state: directory
#    mode: '0755'
#
#
#- name: Find all databases
#  ansible.builtin.find:
#    paths: '{{ jaspar_app_dir }}'
#    file_type: file
#    patterns: 'JASPAR*sqlite3'
#  register: jaspar_sqlite
#
#
#- name: Throw error if no databases are found
#  ansible.builtin.fail:
#    msg: "No databases found!"
#  when: jaspar_sqlite.files | length == 0
#
#- name: Generate a dump file from the database
#  ansible.builtin.shell: "{{ jaspar_app_dir }}/deploy/tools/dump_database {{ item.path }} mktemp --suffix=.sql"
#  loop: '{{ jaspar_sqlite.files }}'
- name: Set path facts
  set_fact:
    download_dir: "{{ jaspar_app_dir }}/download/database"
    raw_path: "{{ jaspar_sqlite_file.path }}"
    database_compressed_path: "{{ jaspar_app_dir }}/download/database/{{ jaspar_sqlite_file | basename | regex_replace('sqlite3$', 'sql.gz') }}"
    database_path: "{{ jaspar_app_dir }}/download/database/{{ jaspar_sqlite_file | basename | regex_replace('sqlite3$', 'sqlite') }}"

- name: Get dump file
  ansible.builtin.shell:
    cmd: "mktemp --suffix=.sql"
  register: dump

- name: Dump the database
  ansible.builtin.shell:
    cmd: "{{ jaspar_app_dir }}/deploy/tools/dump_database {{ raw_path }} {{ dump.stdout }}"

- name: Compress the dump file
  ansible.builtin.shell:
    cmd: "gzip -c {{ dump.stdout }} > {{ database_compressed_path }}"

- name: Get sqlite file from compressed file
  ansible.builtin.shell:
    cmd: "gunzip -c {{ database_compressed_path }} | sqlite3 {{ database_path }}"

- name: Remove the dump file
  ansible.builtin.file:
      path: "{{ dump.stdout }}"
      state: absent

#
#
#- name: Compress the dump file
#  community.general.archive:
#    path: "{{ item.path }}"
#    dest: "{{ jaspar_app_dir }}/download/database/{{ item.path | basename | regex_replace('sqlite3$', 'sql.gz') }}"
#    format: gz
#  loop: '{{ jaspar_sqlite.files }}'
#
#
#- name: Get sqlite file from compressed file
#  ansible.builtin.shell: "gunzip -c {{ jaspar_app_dir }}/download/database/{{ item.path | basename | regex_replace('sqlite3$', 'sql.gz') }} | {{ jaspar_app_dir }}/download/database/{{ item.path | basename | regex_replace('sqlite3$', 'sqlite') }}"
#  loop: '{{ jaspar_sqlite.files }}'

#- name: Remove the dump file
#  ansible.builtin.file:
#      path: "{{ item.path }}"
#      state: absent
#  loop: '{{ jaspar_sqlite.files }}'


