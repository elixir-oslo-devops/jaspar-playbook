---
- name: Deploy test server in NREC
  hosts: localhost

  vars:
    server_name: ansible-test2
    keypair_name: '{{ server_name }}-key'
    volume_name: '{{ server_name }}-volume'

  tasks:
    - name: Create a new keypair
      tags: keypair
      openstack.cloud.keypair:
          state: present
          name: '{{ keypair_name }}'
      register: keypair_result

    - name: Make dir for private key
      tags: keypair
      ansible.builtin.file:
        state: directory
        path: .ssh
        mode: 0700

    - name: Save private key file
      tags: keypair
      ansible.builtin.copy:
        content: '{{ keypair_result.keypair.private_key }}'
        dest: '.ssh/{{ keypair_result.keypair.name }}.pem'
        mode: '0600'
        backup: yes
      when: keypair_result.changed and keypair_result.keypair is defined

    # Create a security group
    - name: Create a new security group
      tags: instance
      openstack.cloud.security_group:
        state: present
        name: jaspar
      register: security_result

    # Create a TCP rule covering current IP
    - name: Create security rule to TCP out instance
      tags: instance
      openstack.cloud.security_group_rule:
        security_group: '{{ security_result.security_group.id }}'
        protocol: any
        ethertype: IPv4
        direction: egress
        remote_ip_prefix: 0.0.0.0/0

    # Create a TCP rule covering current IP
    - name: Create security rule to TCP access instance
      tags: instance
      openstack.cloud.security_group_rule:
        security_group: '{{ security_result.security_group.id }}'
        protocol: tcp
        ethertype: IPv4
        remote_ip_prefix: '{{ ansible_default_ipv4.address }}'

    - name: Create a new instance and attaches to a network # and passes metadata to the instance
      tags: instance
      openstack.cloud.server:
           state: present
           name: '{{ server_name }}'
           image: GOLD Rocky Linux 8
           key_name: '{{ keypair_name }}'
           timeout: 200
           flavor: m1.small
           nics:
             - net-name: dualStack
           security_groups:
#             - default
             - '{{ security_result.security_group.id }}'
    #       meta:
    #         hostname: test1
    #         group: uge_master
      register: instance_result

    # Creates a new volume
    - name: create 10g test volume
      tags: volumes
      openstack.cloud.volume:
        state: present
        size: 10
        volume_type: mass-storage-default
        display_name: '{{ volume_name }}'
        display_description: Volume for testing ansible

    # Attaches a volume to a compute host
    - name: attach volume to host
      tags: volumes
      openstack.cloud.server_volume:
        state: present
        server: '{{ server_name }}'
        volume: '{{ volume_name }}'

    - name: Add Instance to Inventory
      tags: instance
      add_host:
        name: nrec_server_name
        ansible_ssh_host: '{{ instance_result.server.addresses.dualStack | selectattr("version", "eq", 4) | map(attribute="addr") | first }}'
        ansible_ssh_private_key_file: '.ssh/{{ keypair_name }}.pem'

- hosts: nrec_server_name
  remote_user: rocky
  become: true
  tasks:
    - name: Install lvm2 dependency
      package:
        name: lvm2
        state: present

# not needed because lvm can use whole device
#    - name: create partition
#      parted:
#        device: /dev/sdb
#        number: 1
#        flags: [ lvm ]
#        state: present
#        part_end: 10GB

    - name: task for creating volume group
      lvg:
        vg: sample-vg
        pvs: /dev/sdb

    - name: task for creating logical volume
      lvol:
        vg: sample-vg
        lv: sample-lv
        size: 100%FREE
        shrink: false

    - name: Create directory data1 if does not exist
      file:
        path: /data
        state: directory
        mode: '0755'

    - name: format the xfs filesystem
      filesystem:
        fstype: xfs
        dev: /dev/sample-vg/sample-lv

    - name: mount the lv on /data1
      mount:
        path: /data
        src: /dev/sample-vg/sample-lv
        fstype: xfs
        state: mounted